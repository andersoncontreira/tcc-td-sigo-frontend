version: 0.2
env:
  variables:
    PROJECT_NAME: "sigo-frontend"
    REGION: "sa-east-1"
phases:
  install:
    runtime-versions:
      nodejs: 12.x
    commands:
      - echo Installing all requirements
      - npm install
  build:
    commands:
      - npm run build
      - echo Bulding docker image
      - ./bin/aws/ecr-docker-build.sh
      - echo Generating docker tag
      - ./bin/aws/ecr-docker-tag.sh $ACCOUNT_ID
  post_build:
    commands:
      - echo Loging in ECR
      - aws ecr get-login-password --region sa-east-1 --no-include-email
      - echo Pushing docker images
      - ./bin/aws/ecr-docker-push.sh $ACCOUNT_ID
      - echo Generating imagedefinitions.json file
      - printf '[{"name":"%s", "imageUri":"%s"}]' "${PROJECT_NAME}" "${ACCOUNT_ID}.dkr.ecr.sa-east-1.amazonaws.com/${PROJECT_NAME}" >> imagedefinitions.json
      - cat imagedefinitions.json
    #      - echo Installing test requirements
    #      - pip install -r ./requirements-tests.txt
    #      - echo Running unit testes
    #      - ./bin/tests/unit-coverage-no-report-html.sh
    finally:
#      - echo Generating package file
#      - ./bin/tools/package.sh
#      - aws cloudformation package --template-file sam.yml --s3-bucket $S3_BUCKET --s3-prefix $PROJECT_NAME --output-template-file packaged.yml
#reports:
#  UnitTestsReports:
#    files:
#      - 'target/unit/clover.xml'
#    file-format: 'CLOVERXML'
artifacts:
  files:
    - imagedefinitions.json
  base-directory: build